<?xml version="1.0" encoding="UTF-8"?>

<!-- 프레임워크 코어 컴포넌트를 정의한다. -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<bean id="nc.core.PropertyLocationList" class="org.springframework.beans.factory.config.ListFactoryBean">
        <description>
            <![CDATA[Spring context 초기화시 임의로 properties를 목록]]>
        </description>
    	<property name="sourceList">
			<list>
				<value>config/parameter/application.properties</value>
				<value>config/parameter/configuration.properties</value>
				<value>config/parameter/configuration-${system.id}.properties</value>
				<value>config/parameter/deferred.properties</value>
				<value>config/parameter/bat-agent.properties</value>
				<value>config/parameter/bat-cc.properties</value>
			</list>
    	</property>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <description>
            <![CDATA[Spring(3.x이상) context 초기화시 임의로 properties를 지정하는 기능.]]>
        </description>
		<property name="systemPropertiesModeName"       value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	    <property name="ignoreResourceNotFound"         value="true"/>
	    <property name="fileEncoding"                   value="UTF-8"/>
		<property name="locations"                      ref="nc.core.PropertyLocationList"/>
	</bean>
	
    <bean id="nc.core.ICacheManager"
        class="nexcore.framework.core.cache.internal.EhCacheManager"
        init-method="init" destroy-method="destroy">
        <description>캐쉬 처리를 위한 컴포넌트</description>
        <property name="configuration">
            <bean
                class="nexcore.framework.core.cache.internal.DefaultCacheConfiguration">
                <property name="maxElementsInMemory"  value="100000" />
                <property name="overflowToDisk"       value="false" />
                <property name="memoryEvictionPolicy" value="LRU" />
                <property name="predefinedCaches">
                    <list>
                        <props>
                            <prop key="name">code</prop>
                            <prop key="desc">코드항목</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">configuration</prop>
                            <prop key="desc">설정항목</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">message</prop>
                            <prop key="desc">메시지</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">parameter</prop>
                            <prop key="desc">파라미터</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">was-instance</prop>
                            <prop key="desc">프레임워크 노드</prop>
                            <prop key="maxElementsInMemory">1000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LFU</prop>
                        </props>
                        <props>
                            <prop key="name">componentMeta</prop>
                            <prop key="desc">컴포넌트별 메타정보</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">methodMeta</prop>
                            <prop key="desc">거래별 메타정보</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">txcontrol</prop>
                            <prop key="desc">거래통제</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">devloglevel</prop>
                            <prop key="desc">업무로그레벨</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">deferred</prop>
                            <prop key="desc">디퍼드 정보</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">txprofile</prop>
                            <prop key="desc">거래 프로파일</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">notificationConfig</prop>
                            <prop key="desc">통지설정</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                        <props>
                            <prop key="name">txFilterMapping</prop>
                            <prop key="desc">거래필터매핑</prop>
                            <prop key="maxElementsInMemory">100000</prop>
                            <prop key="overflowToDisk">false</prop>
                            <prop key="memoryEvictionPolicy">LRU</prop>
                        </props>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="nc.core.ICodeManager"
        class="nexcore.framework.core.code.internal.CachedCodeManager"
        init-method="init">
        <description>코드 제공을 위한 컴포넌트(캐쉬 사용)</description>
        <property name="cacheManager" ref="nc.core.ICacheManager" />
        <property name="sqlManager"   ref="nc.db.ISqlManager" />
    </bean>

    <bean id="nc.core.IConfigurationManager"
        class="nexcore.framework.core.parameter.internal.DefaultConfigurationManager"
        init-method="init">
        <description>시스템 환경설정 제공을 위한 컴포넌트(파일 로드 및 자체 캐싱)</description>
        <property name="cacheManager" ref="nc.core.ICacheManager" />
        <property name="cacheName"    value="configuration" />
        <property name="sqlManager"   ref="nc.db.ISqlManager" />
        <property name="fileConfigurationLoader">
            <bean class="nexcore.framework.core.parameter.internal.FileConfigurationLoader">
                <property name="baseName" value="config/parameter/configuration" />
                <property name="encoding" value="UTF-8" />
            </bean>
        </property>
        <property name="databaseConfigurationLoader">
            <bean class="nexcore.framework.core.parameter.internal.SqlConfigurationLoader">
                <property name="sqlManager" ref="nc.db.ISqlManager" />
            </bean>
        </property>
    </bean>

    <bean id="nc.core.IBizParamManager"
        class="nexcore.framework.core.parameter.internal.CachedParamManager"
        init-method="init">
        <description>업무 파라미터 제공을 위한 컴포넌트(캐쉬 사용)</description>
        <property name="cacheManager"   ref="nc.core.ICacheManager" />
        <property name="sqlManager"     ref="nc.db.ISqlManager" />
        <property name="cacheName"      value="parameter" />
        <property name="preload"        value="true" />
    </bean>

    <bean id="nc.core.IWasInstanceManager"
        class="nexcore.framework.core.parameter.internal.DefaultWasInstanceManager"
        init-method="init" destroy-method="destroy">
        <description>WAS 인스턴스 정보 제공을 위한 컴포넌트</description>
        <property name="cacheManager" ref="nc.core.ICacheManager" />
        <property name="sqlManager"   ref="nc.db.ISqlManager" />
    </bean>
    
    <bean id="nc.core.IMessageManager"
        class="nexcore.framework.core.message.internal.DefaultMessageManager"
        init-method="init">
        <description>
            <![CDATA[메시지 관리 컴포넌트]]>
        </description>
        <property name="cacheManager"          ref="nc.core.ICacheManager" />
        <property name="sqlManager"            ref="nc.db.ISqlManager" />
        <property name="cacheName"             value="message" />
        <property name="preload"               value="false" />
        <property name="nullEscape"            value="null" />
        <property name="nullEscapeInfoMessage" value="Unknown" />
        <property name="resourceBundleUsing"   value="true" /> 
        <property name="additionalResourceBasenameList">
        	<list>
        	</list>
        </property>
        <!-- preload : init이나 refresh할 때 모든 캐싱 정보를 리셋만 할지(false), 
               모두 다시 읽어들일지(true)를 결정 -->
        <!-- nullEscape : 주어진 id와 locale정보에 대해 메시지가 없을 경우 
            null을 리턴할지(null), id와 locale정보만을 담은 간단한 메시지를 리턴할지(info), 
               예외를 던질 것인지(exception), 내용이 없는 메시지 객체를 리턴할지(nullinfo)를 결정 -->
        <!-- nullEscapeInfoMessage : nullEscape이 'info'인 경우에 사용되며, 
               메시지가 없는 경우 메시지 내용은 'nullEscapeInfoMessage[messageId : locale]'이 된다. -->
        <!-- resourceBundleUsing이 true이며 DB에 메시지가 없는 경우 파일에서 조한다.
               조회순서는 DB - 추가정의파일(additionalResourceBasenameList) - 기본파일(프레임워크 라이브러리에 포함) 순서이다. -->
    </bean>

    <bean id="nc.core.ITimedResourceWatcher"
        class="nexcore.framework.core.cache.internal.TimedResourceWatcher"
        init-method="init" destroy-method="destroy">
        <description>
            <![CDATA[주기적으로 파일의 변경사항을 모니터링하는 컴포넌트]]>
        </description>
        <property name="interval" value="5000" />
        <property name="delay"    value="20000" />
    </bean>

    <!-- DefaultComponentLocator::IComponentLocator -->
    <!-- Applying new naming convention for bean, 2009-09-14,  -->
    <bean id="nc.DefaultComponentLocator"
        class="nexcore.framework.core.service.internal.DefaultComponentLocator"
        init-method="init" destroy-method="destroy">
        <description>
        <![CDATA[The locator to get business component.]]>
        </description>
        <property name="localEjbDelegator" ref="nc.LocalEjbDelegator"/>
        <property name="metaDataRegistry"  ref="nc.core.IBizComponentMetaDataRegistry"/>
    </bean>
    
    <bean id="nc.LocalEjbDelegator"
    	class="nexcore.framework.core.service.internal.LocalContextLocalEJBDelegator"
		init-method="init" destroy-method="destroy">
        <description>
        <![CDATA[The service delegator for local biz component.]]>
        </description>
        <property name="facadeJndiName"    value="${online.ejb.facade.local}"/>
        <property name="useHomeObjectPool" value="${online.ejb.facade.usecache}"/>
    </bean>    
    
    <bean id="nc.core.IBizComponentMetaDataRegistry"
        class="nexcore.framework.core.component.internal.BizComponentMetaDataLazyRegistry"
        init-method="init" destroy-method="destroy" lazy-init="true">
        <description>
            <![CDATA[컴포넌트 정보파일을 메모리 객체로 로딩하는 컴포넌트]]>
        </description>
        <property name="configurationManager" ref="nc.core.IConfigurationManager" />
        <property name="cacheManager"         ref="nc.core.ICacheManager" />
        <property name="loader">
        	<bean class="nexcore.framework.core.component.internal.FileMetaDataLazyLoader" init-method="init" >
		        <property name="encoding"      value="UTF-8" />
		        <!-- property name="parsingIoParentClassXdList">
		        	<list>
		        		<value>BPU</value>
		        	</list>
		        </property-->
        	</bean>
        </property>
        <property name="ioLayoutLoader">
            <bean class="nexcore.framework.core.component.internal.FileIoLayoutMetaDataLoader" init-method="init" >
		        <property name="encoding"  value="UTF-8" />
            </bean>
        </property>
        <property name="timedResourceWatcher"                       ref="nc.core.ITimedResourceWatcher" />
        <property name="hotDeploy"                                  value="${component.hotDeploy}" />
        <property name="smartDeploy"                                value="${component.smartDeploy}" />
        <property name="lazyLoading"                                value="${component.meta.lazyLoading}" />
        <property name="componentRootPath"                          value="${component.root.path}" />
        <property name="componentStagePath"                         value="${component.stage.path}" />
        <property name="componentStageCleanAllOnLoading"            value="${component.stage.cleanAllOnLoading}" />
        <property name="componentStageCleanOldToSchedule"           value="${component.stage.cleanOldToSchedule}" />
        <property name="componentStageCleanOldToScheduleTime"       value="${component.stage.cleanOldToScheduleTime}" />
        <property name="componentStageCleanOldToScheduleRetainDays" value="${component.stage.cleanOldToScheduleRetainDays}" />
    </bean>

    <bean id="nc.core.IUserThreadManager"
        class="nexcore.framework.core.service.internal.DefaultUserThreadManager"
        init-method="init" destroy-method="destroy">
        <description>
            <![CDATA[ThreadLocal을 이용하여 RequestID를 관리하는 컴포넌트]]>
        </description>
    </bean>

    <bean id="nc.core.ITxControlManager"
        class="nexcore.framework.core.service.txcontrol.internal.ExpressionTxControlManager"
        init-method="init" destroy-method="destroy">
        <description>
            <![CDATA[거래 제어(Transaction control)를 수행하는 컴포넌트]]>
        </description>
        <property name="sqlManager"   ref="nc.db.ISqlManager" />
        <property name="cacheManager" ref="nc.core.ICacheManager" />
        <property name="cacheName"    value="txcontrol" />
    </bean>

    <bean id="nc.core.IBizClassLoadManager"
    	class="nexcore.framework.core.component.internal.DynamicBizComponentClassLoadManager"
		init-method="init" destroy-method="destroy" lazy-init="true">
        <description>
        <![CDATA[POJO BizComponent 방식으로 동작할때 Biz Component 클래스를 로드하여 관리하는 컴포넌트.]]>
        </description>
        <property name="cmdRegistry"                    ref   ="nc.core.IBizComponentMetaDataRegistry" />
        <property name="hotDeploy"                      value ="${component.hotDeploy}" />
        <property name="smartDeploy"                    value ="${component.smartDeploy}" />
        <property name="lazyLoading"                    value ="${component.class.lazyLoading}" />
        <property name="classMemberVariableNotContain"  value ="${component.class.memberVariableNotContain}" />
        <property name="destroyWaitTimeMins"            value ="${component.destroyWaitTimeMins}" />
        <property name="bizUnitMethodInterceptors">
        	<list>
        		<bean class="nexcore.framework.core.biz.dynamic.LoggingBizUnitMethodInterceptor"/>
        	</list>
        </property>
    </bean>  

    <bean id="nc.core.ComponentMetaRegistryViewer" 
    	class="nexcore.framework.core.component.internal.ComponentMetaRegistryViewer">
        <description>
            <![CDATA[컴포넌트 메타정보 조회기]]>
        </description>
    	<property name="bizComponentMetaDataRegistry" ref="nc.core.IBizComponentMetaDataRegistry" />
    </bean>

    <bean id="nc.core.IExceptionMessageConvertor"
        class="nexcore.framework.core.message.internal.DefaultExceptionMessageConvertor"
        init-method="init" destroy-method="destroy">
        <description>
            <![CDATA[관리되는 메시지를 사용하여 예외 메시지 변환]]>
        </description>
    </bean>

    <bean id="nc.core.monitor.IThreadManager" 
    	class="nexcore.framework.core.monitor.internal.ThreadManager" 
    	init-method="init" destroy-method="destroy"> 
        <description>
            <![CDATA[쓰레드 및 처리량 모니터링.]]>
        </description>
    	<property name="enabled"                   value="${thread.monitor.enabled}" />
    	<property name="throughputEnabled"         value="${thread.monitor.throughputEnabled}" />
    	<property name="throughputMinutes"         value="${thread.monitor.throughputMinutes}" />
    	<property name="longRunningEnabled"        value="${thread.monitor.longRunningEnabled}" />
    	<property name="longRunningIntervalMillis" value="${thread.monitor.longRunningIntervalMillis}" />
    	<property name="longRunningBaseMillis"     value="${thread.monitor.longRunningBaseMillis}" />
    	<property name="timeoutEnabled"            value="${thread.monitor.timeoutEnabled}" />
    	<property name="timeoutBaseSeconds"        value="${thread.monitor.timeoutBaseSeconds}" />
        <property name="txProfileManager"          ref="nc.core.TxProfileManager" />
    </bean>

    <bean id="nc.core.NotificationConfigManager" 
    	class="nexcore.framework.core.notification.internal.NotificationConfigManager" 
    	init-method="init" destroy-method="destroy"> 
        <description>
            <![CDATA[통지 설정 관리]]>
        </description>
    	<property name="cacheName"     value="notificationConfig" />
        <property name="cacheManager"  ref="nc.core.ICacheManager" />
        <property name="sqlManager"    ref="nc.db.ISqlManager" />
    </bean>
    
    <!--  
    <bean id="nc.core.IdentityGenerator"
    	class="nexcore.framework.core.data.IdentityUUIDBasedGenerator">
        <description>
            <![CDATA[요청아이디 생성기 - UUID 기반 ]]>
        </description>
    </bean>
    -->
    <bean id="nc.core.IdentityGenerator"
    	class="nexcore.framework.core.data.IdentityPatternBasedGenerator">
        <description>
            <![CDATA[요청아이디 생성기 - 패턴 기반 - %DATE(날짜형식), %PARAM(파라미터키값), %SEQ(길이)]]>
        </description>
        <property name="tokens">
        	<list>
        		<value>@DATE(yyyyMMddHHmmssSSS)</value>
        		<value>@PARAM(runtimeMode)</value>
        		<value>@PARAM(systemKind)</value>
        		<value>${system.id}</value>
        		<value>@SEQ(5)</value>
        	</list>
        </property>
        <property name="defaultParamMap">
        	<map>
        		<entry key="runtimeMode" value="${nexcore.runtime.mode.${system.id}}"/>
        		<entry key="systemKind"  value="FWK"/>
        	</map>
        </property>
    </bean>

    <bean id="nc.core.IByteArrayMemoryPool"
        class="nexcore.framework.core.service.front.DefaultByteArrayMemoryPool">
        <description>
            <![CDATA[ byte[] 재사용을 위한 memory pool. Flat 변환 과정에서 사용됨. ]]>
        </description>
		<property name="defaultStackMaxEntry"  value="30"   />
		<property name="maxArraySizeKByte"     value="1024" /> <!-- 1024K 보다 큰 byte[] 는 pooling 하지 않고 gc 시킴.  -->
		<property name="maxEntryPerStack"      value="1=100,2=100,3=100,4=100,5=100,10=50"   /> <!-- 1K용 stack size=100, 2K용 stack size=100, ... -->
    </bean>
	
	<bean id="nc.core.UploadedFileManager"
		class="nexcore.framework.core.file.internal.DefaultUploadedFileManager"
		init-method="init" destroy-method="destroy">
        <description>
            <![CDATA[ 업로드 파일 처리 및 관리 ]]>
        </description>
        <property name="rootDirectory"               value="${file.upload.root.folder}" />
        <property name="tempDirectory"               value="${file.upload.temp.folder}" />
        <property name="encoding"                    value="${file.upload.encoding}" />
        <property name="maxFileSizeStr"              value="${file.upload.max.size}" />
        <property name="maxEachFileSizeStr"          value="${file.upload.max.size.each}" />
        <property name="downloadBufferSizeStr"       value="${file.download.buffer.size}" />
        <property name="tempCleanSchedule"           value="${file.upload.temp.cleanSchedule}" />
        <property name="tempCleanScheduleTime"       value="${file.upload.temp.cleanScheduleTime}" />
        <property name="tempCleanScheduleRetainDays" value="${file.upload.temp.cleanScheduleRetainDays}" />
	</bean>
		
</beans>

